[fetching.PandasFetcher]
# ------------------------------------------------------------------------------
# Implementation-specific configuration. All available arguments to the
# AbstractFetcher and PandasFetcher-classes may be used here, except 'mapper'
# (see subsection [fetching.mapping]).
#
# https://id-translation.readthedocs.io/en/stable/api/id_translation.fetching.html#id_translation.fetching.AbstractFetcher
# https://id-translation.readthedocs.io/en/stable/api/id_translation.fetching.html#id_translation.fetching.PandasFetcher
#
read_function = "read_csv"  # Unqualified names must belong to the 'pandas' namespace.
read_path_format = "s3://my-bucket/id-translation/data/{}.csv"

[fetching.PandasFetcher.read_function_kwargs.storage_options]
key = "minioadmin"
secret = "minioadmin"
client_kwargs = { endpoint_url = "http://localhost:9000" }

# ------------------------------------------------------------------------------
# AbstractFetcher configuration.
#
# https://id-translation.readthedocs.io/en/stable/api/id_translation.fetching.html#id_translation.fetching.AbstractFetcher
selective_fetch_all = false
optional = false  # If true, discard if initialization fails or no sources are provided.

# ------------------------------------------------------------------------------
# Placeholder mapping configuration. Binds actual names in sources (such as
# column names in an SQL table) to wanted names, eg id = 'animal_id'.
#
# Vocabulary:
#       value: A placeholder to match to a column name.
#   candidate: The name of a column in a table.
#     context: The source, e.g. a table or file name.
#
# https://id-translation.readthedocs.io/en/stable/documentation/mapping-primer.html
# https://id-translation.readthedocs.io/en/stable/api/id_translation.mapping.html
#
[fetching.mapping]
on_unmapped = "ignore"  # Logs on the DEBUG level
score_function = "modified_hamming"
verbose_logging = false # High volume; set true only if needed

# ------------------------------------------------------------------------------
# https://id-translation.readthedocs.io/en/stable/api/id_translation.mapping.filter_functions.html
[[fetching.mapping.filter_functions]]  # Avoid tables that contain banned keywords.
function = "filter_sources"
regex = "^(previous|old)_.*"
remove = true
[[fetching.mapping.filter_functions]]  # No safety incidents please!
function = "filter_placeholders"
regex = ".*(password|hash).*"
remove = true

# ------------------------------------------------------------------------------
# https://id-translation.readthedocs.io/en/stable/api/id_translation.mapping.heuristic_functions.html
# Set mutate=true to keep the new value and candidate names until mapping is complete.
[[fetching.mapping.score_function_heuristics]]  # For tables with a prefix, e.g. first_animals instead of just animals
function = "value_fstring_alias"
fstring = "first_{value}"
[[fetching.mapping.score_function_heuristics]] # Handle smurf naming, e.g. column 'animal_id' in table 'animals'
function = "value_fstring_alias"
fstring = "{context}_{value}"
[[fetching.mapping.score_function_heuristics]] # Name column is table name, e.g. 'animals.animal' instead if 'animals.name'.
function = "value_fstring_alias"
fstring = "{context}"
for_value = "name"  # Required since {name} is not in the fstring
[[fetching.mapping.score_function_heuristics]]
function = "like_database_table"

# ------------------------------------------------------------------------------
# Manual wanted-to-actual placeholder mapping. Use for mappings that are
# difficult or impossible to resolve using scoring logic.
[fetching.mapping.overrides]  # Shared overrides used for all tables
wanted_placeholder = "actual_column"
[fetching.mapping.overrides.table_name]  # Overrides for 'table_name' only.
wanted_placeholder = "actual_column_in_table_name"
