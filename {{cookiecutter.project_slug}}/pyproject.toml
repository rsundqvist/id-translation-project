[project]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "Translation of IDs found in {{cookiecutter.organization}} databases."
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" },
]
readme = "README.md"

requires-python = ">=3.11"
dependencies = [
    "id-translation {{cookiecutter.id_translation_version}}",
]


[project.entry-points."id_translation.dio"]
# See https://id-translation.readthedocs.io/en/stable/api/id_translation.dio.html#user-defined-integrations
# name_doesnt_matter = "{{cookiecutter.namespace}}.id_translation.submodule:MyDataStructureIO"

[tool.poetry]

packages = [
    { include = "{{cookiecutter.namespace}}", from = "src" }
]

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
mypy = "~1.15.0"
ruff = "~0.11.3"

# Demo dependencies
pg8000 = "~1.30.5"  # src/{{cookiecutter.namespace}}/id_translation/config/fetching/dvd-rental-store.toml
# s3fs = "~2024.3.1"  # src/{{cookiecutter.namespace}}/id_translation/config/fetching/inactive/csv-files-in-s3.toml

[tool.poetry.group.docs.dependencies]
sphinx = "~7.2.6"
pydata-sphinx-theme = "^0.15.2"

[tool.pytest.ini_options]
filterwarnings = []
log_file_level = 10
log_level = 10
log_file = "pytest.log"

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.mypy]
no_implicit_optional = false
install_types = true
check_untyped_defs = true
always_true = ["ID_TRANSLATION_PANDAS_IS_TYPED"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
