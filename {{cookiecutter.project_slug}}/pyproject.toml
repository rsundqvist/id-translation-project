[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "Translation of IDs found in {{cookiecutter.organization}} databases."
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
readme = "README.md"
packages = [{ include = "{{cookiecutter.namespace}}", from = "src" }]

[tool.poetry.dependencies]
python = "<4,>=3.11"

id-translation = {{cookiecutter.id_translation_version}}

# Database drivers.
# psycopg2-binary = "https://pypi.org/project/psycopg2-binary/"  # Postgres driver
# pymysql = "https://pypi.org/project/pymysql/"  # MySQL/MariaDB driver

# Cloud provider secrets
# aws-secretsmanager-caching = "https://pypi.org/project/aws-secretsmanager-caching/"  # AWS secrets
# pip install google-cloud-secret-manager = "https://pypi.org/project/google-cloud-secret-manager/"  # GCP secrets

# Remote file systems
# s3fs = "https://pypi.org/project/s3fs/"  # AWS S3, or S3-compatible storage such as MinIO
# gcsfs = "https://pypi.org/project/gcsfs/"  # Google cloud storage

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
ruff = "^0.3.4"
mypy = "~1.9.0"

# Demo dependencies
pg8000 = "~1.30.5"  # src/{{cookiecutter.namespace}}/id_translation/config/fetching/dvd-rental-store.toml
# s3fs = "~2024.3.1"  # src/{{cookiecutter.namespace}}/id_translation/config/fetching/inactive/csv-files-in-s3.toml

[tool.poetry.group.docs.dependencies]
sphinx = "~7.2.6"
pydata-sphinx-theme = "^0.15.2"

[tool.pytest.ini_options]
filterwarnings = []
log_file_level = 10
log_level = 10
log_file = "pytest.log"

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.mypy]
no_implicit_optional = false
install_types = true
check_untyped_defs = true
always_true = ["ID_TRANSLATION_PANDAS_IS_TYPED"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
